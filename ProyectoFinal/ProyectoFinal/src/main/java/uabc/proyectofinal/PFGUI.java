/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uabc.proyectofinal;

import java.awt.Color;
import java.util.ArrayList;

/**
 * Clase que crea la interfaz grafica de mi proyecto
 * @author Dell
 */
public class PFGUI extends javax.swing.JFrame {
    //Atributos necesarios para almacenar los valores actuales
    GrafoDirigidoAciclico grafo;
    ArrayList<GrafoDirigidoAciclico> grafos;
    GrafoDirigidoAciclico[] array;
    int itr = 0;

    /**
     * Creates new form PFGUI
     */
    public PFGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        insert = new javax.swing.JPanel();
        vertex = new javax.swing.JTextField();
        insertVertex = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        origen = new javax.swing.JTextField();
        destino = new javax.swing.JTextField();
        insertEdge = new javax.swing.JButton();
        mostrarGrafo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        grafo0N = new javax.swing.JButton();
        nDeVertices = new javax.swing.JTextField();
        randomGrafo0N = new javax.swing.JButton();
        randomGrafo4v = new javax.swing.JButton();
        save = new javax.swing.JButton();
        load = new javax.swing.JButton();
        loads = new javax.swing.JButton();
        next = new javax.swing.JButton();
        next1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        matriz = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista = new javax.swing.JTextArea();
        graph = new javax.swing.JScrollPane();
        fileName = new javax.swing.JTextField();
        graphName = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        topos = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(1128, 555));

        title.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        title.setText("GRAFOS Y TOPOLOGICAL SORT");

        insert.setBorder(javax.swing.BorderFactory.createTitledBorder("Insertar"));

        vertex.setToolTipText("");
        vertex.setBorder(javax.swing.BorderFactory.createTitledBorder("Vertice"));

        insertVertex.setText("Insertar Vertice");
        insertVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertVertexActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Arista"));

        origen.setBorder(javax.swing.BorderFactory.createTitledBorder("Origen"));

        destino.setBorder(javax.swing.BorderFactory.createTitledBorder("Destino"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(origen, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                    .addComponent(destino, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(origen, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(destino))
        );

        insertEdge.setText("Insertar Arista");
        insertEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertEdgeActionPerformed(evt);
            }
        });

        mostrarGrafo.setText("Mostrar Grafo");
        mostrarGrafo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarGrafoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout insertLayout = new javax.swing.GroupLayout(insert);
        insert.setLayout(insertLayout);
        insertLayout.setHorizontalGroup(
            insertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vertex)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(insertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(insertVertex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(insertEdge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mostrarGrafo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        insertLayout.setVerticalGroup(
            insertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertLayout.createSequentialGroup()
                .addGroup(insertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(insertLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(insertVertex))
                    .addGroup(insertLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(vertex, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(insertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(insertLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(mostrarGrafo)
                        .addGap(18, 18, 18)
                        .addComponent(insertEdge)
                        .addGap(63, 63, 63))
                    .addGroup(insertLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Constructores"));

        grafo0N.setText("Crear Grafo 0 - n");
        grafo0N.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grafo0NActionPerformed(evt);
            }
        });

        nDeVertices.setBorder(javax.swing.BorderFactory.createTitledBorder("n"));

        randomGrafo0N.setText("Crear Grafo 0 - n");
        randomGrafo0N.setBorder(javax.swing.BorderFactory.createTitledBorder("Aleatorio"));
        randomGrafo0N.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomGrafo0NActionPerformed(evt);
            }
        });

        randomGrafo4v.setText("Crear Grafo Aleatorio de 4 v");
        randomGrafo4v.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomGrafo4vActionPerformed(evt);
            }
        });

        save.setText("Guardar Grafo");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        load.setText("Cargar Grafo");
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });

        loads.setText("Cargar Grafos");
        loads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadsActionPerformed(evt);
            }
        });

        next.setText("Sig Grafo");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        next1.setText("Topological Sort");
        next1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(randomGrafo4v)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(next1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(17, 17, 17))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(randomGrafo0N, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grafo0N, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nDeVertices, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(loads, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(save, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(load, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(16, 16, 16))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(load)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(loads)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(next))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(nDeVertices, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(grafo0N, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(randomGrafo0N, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(randomGrafo4v, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(next1)))
        );

        matriz.setEditable(false);
        matriz.setColumns(20);
        matriz.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        matriz.setRows(5);
        jScrollPane1.setViewportView(matriz);

        lista.setEditable(false);
        lista.setColumns(20);
        lista.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lista.setRows(5);
        jScrollPane2.setViewportView(lista);

        fileName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fileName.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre Archivo"));

        graphName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        graphName.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre Grafo"));

        topos.setColumns(20);
        topos.setRows(5);
        jScrollPane3.setViewportView(topos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(title)
                        .addGap(33, 33, 33)
                        .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(graphName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 60, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(insert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(graph, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(title))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(graphName))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(graph, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mostrarGrafoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarGrafoActionPerformed
        mostrarGrafo();
        mostrarMatriz();
        mostrarLista();
    }//GEN-LAST:event_mostrarGrafoActionPerformed

    private void grafo0NActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grafo0NActionPerformed
        String numero = nDeVertices.getText();
        if (esNumero(numero)) {
            nDeVertices.setBackground(Color.green);
            int n = Integer.valueOf(numero);
            GrafoDirigidoAciclico g = new GrafoDirigidoAciclico(n);
            g.setNombre(graphName.getText());
            grafo = g;
        } else {
            nDeVertices.setBackground(Color.red);
        }
    }//GEN-LAST:event_grafo0NActionPerformed

    private void randomGrafo0NActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomGrafo0NActionPerformed
        String numero = nDeVertices.getText();
        if (esNumero(numero)) {
            nDeVertices.setBackground(Color.green);
            int n = Integer.valueOf(numero);
            GrafoDirigidoAciclico g = new GrafoDirigidoAciclico(n, true, true);
            g.setNombre(graphName.getText());
            grafo = g;
        } else {
            nDeVertices.setBackground(Color.red);
        }
    }//GEN-LAST:event_randomGrafo0NActionPerformed

    private void randomGrafo4vActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomGrafo4vActionPerformed
        GrafoDirigidoAciclico g = new GrafoDirigidoAciclico();
        g.setNombre(graphName.getText());
        grafo = g;
    }//GEN-LAST:event_randomGrafo4vActionPerformed

    private void insertVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertVertexActionPerformed
        String vertice = vertex.getText();
        if (vertice.isEmpty() || grafo == null) {
            vertex.setBackground(Color.red);
        } else if (esNumero(vertice) || esLetra(vertice)) {
            vertex.setBackground(Color.green);
            grafo.crearVertice(vertice);
        } else {
            vertex.setBackground(Color.red);
        }
    }//GEN-LAST:event_insertVertexActionPerformed

    private void insertEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertEdgeActionPerformed
        String ori = origen.getText();
        String des = destino.getText();
        if (ori.isEmpty() || grafo == null || des.isEmpty()) {
            origen.setBackground(Color.red);
            destino.setBackground(Color.red);
        } else if (esTextoValido(ori) && esTextoValido(des)) {
            origen.setBackground(Color.green);
            destino.setBackground(Color.green);
            grafo.insertarArista(ori, des);
        } else {
            origen.setBackground(Color.red);
            destino.setBackground(Color.red);
        }
    }//GEN-LAST:event_insertEdgeActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        String name = fileName.getText();
        if (grafo != null)
            Archivador.guardarGrafo(grafo, name);
    }//GEN-LAST:event_saveActionPerformed

    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        String name = fileName.getText();
        grafo = null;
        grafo = Archivador.cargarGrafo(name);
        mostrarGrafo();
        mostrarLista();
        mostrarMatriz();
    }//GEN-LAST:event_loadActionPerformed

    private void loadsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadsActionPerformed
        String name = fileName.getText();
        itr = 0;
        grafos = Archivador.cargarGrafos(name);
        array = grafos.toArray(new GrafoDirigidoAciclico[0]);
        if (itr < array.length && array[itr] != null) {
            grafo = array[itr++];
            mostrarGrafo();
            mostrarLista();
            mostrarMatriz();
        } else {
            System.out.println("No hay más grafos para mostrar.");
        }
    }//GEN-LAST:event_loadsActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        if (itr < array.length && array[itr] != null) {
            grafo = array[itr++];
            mostrarGrafo();
            mostrarLista();
            mostrarMatriz();
        } else {
            System.out.println("No hay más grafos para mostrar.");
        }
    }//GEN-LAST:event_nextActionPerformed

    private void next1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next1ActionPerformed
       if(grafo!=null){
           String topo = grafo.topologicalSort();
           topos.setText(topo);
       }
    }//GEN-LAST:event_next1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PFGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PFGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PFGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PFGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PFGUI().setVisible(true);
            }
        });
    }

    // Método para comprobar si el texto es un número
    private static boolean esNumero(String texto) {
        return texto.matches("\\d+"); // Verifica si contiene solo dígitos
    }

    // Método para comprobar si el texto es una letra
    private static boolean esLetra(String texto) {
        return texto.matches("[a-zA-Z]+"); // Verifica si contiene solo letras
    }

    private boolean esTextoValido(String texto) {
        return texto.matches("[a-zA-Z0-9]+"); // Solo letras y/o números
    }

    private void mostrarGrafo() {
        GrafoGUI grafoGUI = GrafoGUI.creaGrafo(grafo);
        graph.removeAll();
        graph.revalidate();
        graph.add(grafoGUI);
        graph.repaint();
        graph.validate();
    }

    private void mostrarMatriz() {
        matriz.setText(grafo.mostrarEstructura());
    }

    private void mostrarLista() {
        lista.setText(grafo.mostrarListaAdyacencia());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField destino;
    private javax.swing.JTextField fileName;
    private javax.swing.JButton grafo0N;
    private javax.swing.JScrollPane graph;
    private javax.swing.JTextField graphName;
    private javax.swing.JPanel insert;
    private javax.swing.JButton insertEdge;
    private javax.swing.JButton insertVertex;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea lista;
    private javax.swing.JButton load;
    private javax.swing.JButton loads;
    private javax.swing.JTextArea matriz;
    private javax.swing.JButton mostrarGrafo;
    private javax.swing.JTextField nDeVertices;
    private javax.swing.JButton next;
    private javax.swing.JButton next1;
    private javax.swing.JTextField origen;
    private javax.swing.JButton randomGrafo0N;
    private javax.swing.JButton randomGrafo4v;
    private javax.swing.JButton save;
    private javax.swing.JLabel title;
    private javax.swing.JTextArea topos;
    private javax.swing.JTextField vertex;
    // End of variables declaration//GEN-END:variables
}
